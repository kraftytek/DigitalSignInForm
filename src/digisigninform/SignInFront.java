/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package digisigninform;

import java.awt.Graphics;
import java.awt.PrintJob;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author kraft
 */
public class SignInFront extends javax.swing.JFrame {

    /**
     * Creates new form SignInFront
     */
    public SignInFront() {
        initComponents();
    }

    public String connectionUrl
            = "jdbc:sqlserver://sql.kraftytek.ca:1433;"
            + "encrypt=false;"
            + "databaseName=NCRO_WorkOrders;"
            + "user=sa;"
            + "password=S!lver88";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleText = new javax.swing.JLabel();
        contactText = new javax.swing.JScrollPane();
        conactInfo = new javax.swing.JTextArea();
        workOrderText = new javax.swing.JScrollPane();
        woTextArea = new javax.swing.JTextArea();
        fNameText = new javax.swing.JTextField();
        lNameText = new javax.swing.JTextField();
        phoneOneText = new javax.swing.JTextField();
        cellPhoneText = new javax.swing.JTextField();
        equipmentField = new javax.swing.JScrollPane();
        equipmentText = new javax.swing.JTextArea();
        workToDoField = new javax.swing.JScrollPane();
        workToBeDone = new javax.swing.JTextArea();
        checkLaptop = new javax.swing.JCheckBox();
        checkDesktop = new javax.swing.JCheckBox();
        checkTablet = new javax.swing.JCheckBox();
        passwordText = new javax.swing.JTextField();
        pinText = new javax.swing.JTextField();
        techLabel = new javax.swing.JLabel();
        techComboBox = new javax.swing.JComboBox<>();
        eMailText = new javax.swing.JTextField();
        checkCharger = new javax.swing.JCheckBox();
        workPerformedArea = new javax.swing.JScrollPane();
        workDoneText = new javax.swing.JTextArea();
        partBox = new javax.swing.JTextField();
        minChargeLabel = new javax.swing.JLabel();
        MinChargeText = new javax.swing.JTextField();
        legalPane = new javax.swing.JScrollPane();
        legalText = new javax.swing.JTextArea();
        SigLabel = new javax.swing.JLabel();
        signText = new javax.swing.JTextField();
        commitButt = new javax.swing.JButton();
        searchButt = new javax.swing.JButton();
        printButt = new javax.swing.JButton();
        connectedText = new javax.swing.JLabel();
        clientIDText = new javax.swing.JLabel();
        searchWOButt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        updateButt = new javax.swing.JButton();
        addButt = new javax.swing.JButton();
        clearButt = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(700, 960));
        setResizable(false);
        setSize(new java.awt.Dimension(700, 960));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(780, 927));

        titleText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        titleText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleText.setText("Service Work Order");

        contactText.setBorder(null);
        contactText.setFocusable(false);

        conactInfo.setEditable(false);
        conactInfo.setColumns(20);
        conactInfo.setRows(3);
        conactInfo.setText("102-1980 Cooper Rd., Kelowna, B.C., Canada V1Y-8K5\nPhone: 250-868-9765 / 250-763-2492 | Fax:877-263-8594\nwww.ncro.ca | service@ncro.ca | facebook.com/ncrodotca");
        conactInfo.setAutoscrolls(false);
        conactInfo.setBorder(null);
        contactText.setViewportView(conactInfo);

        workOrderText.setBorder(null);

        woTextArea.setColumns(1);
        woTextArea.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        woTextArea.setRows(1);
        woTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        workOrderText.setViewportView(woTextArea);

        fNameText.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "First Name:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        fNameText.setNextFocusableComponent(lNameText);

        lNameText.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Last Name:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        lNameText.setNextFocusableComponent(phoneOneText);

        phoneOneText.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Home Phone:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        phoneOneText.setNextFocusableComponent(cellPhoneText);

        cellPhoneText.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Cell Phone:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        equipmentField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Other Equipment:"));
        equipmentField.setOpaque(false);

        equipmentText.setColumns(1);
        equipmentText.setRows(1);
        equipmentText.setBorder(null);
        equipmentField.setViewportView(equipmentText);

        workToDoField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Work to be Done:"));
        workToDoField.setOpaque(false);

        workToBeDone.setColumns(20);
        workToBeDone.setLineWrap(true);
        workToBeDone.setRows(5);
        workToBeDone.setWrapStyleWord(true);
        workToBeDone.setBorder(null);
        workToDoField.setViewportView(workToBeDone);

        checkLaptop.setBackground(new java.awt.Color(255, 255, 255));
        checkLaptop.setText("Laptop");
        checkLaptop.setBorder(null);
        checkLaptop.setOpaque(true);

        checkDesktop.setBackground(new java.awt.Color(255, 255, 255));
        checkDesktop.setText("Desktop");

        checkTablet.setBackground(new java.awt.Color(255, 255, 255));
        checkTablet.setText("Tablet");

        passwordText.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Password:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        pinText.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Pin:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        techLabel.setText("Tech:");

        techComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Chris Reid", "Zane Zieske", "Dillan Timpany", "Tyson Schlehahn" }));
        techComboBox.setOpaque(true);

        eMailText.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "E-Mail:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        checkCharger.setBackground(new java.awt.Color(255, 255, 255));
        checkCharger.setText("Charger");

        workPerformedArea.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Work Performed:"));
        workPerformedArea.setOpaque(false);

        workDoneText.setColumns(20);
        workDoneText.setLineWrap(true);
        workDoneText.setRows(5);
        workDoneText.setWrapStyleWord(true);
        workDoneText.setBorder(null);
        workPerformedArea.setViewportView(workDoneText);

        partBox.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Parts Used:"));
        partBox.setOpaque(true);

        minChargeLabel.setText("Minimum Charge:");

        MinChargeText.setText("$50");

        legalPane.setBorder(null);
        legalPane.setOpaque(false);

        legalText.setEditable(false);
        legalText.setColumns(20);
        legalText.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        legalText.setLineWrap(true);
        legalText.setRows(5);
        legalText.setText("I agree to release the above equipment to National Computer Resource (\"NCR\") for evaluation and/or repair. I agree that NCR is in no way responsible for the condition of equipment prior to be serviced, or for lost or damaged data that may occur during the evaluation and/or repair. I agree that the above description of the equipment is based solely upon my representations and may be in error. I agree that NCR makes no representations, warranties or guarantees as to the lenfth of time to make an evaluation or repair, as to whether can in fact be made, or as to the current or future impact any evaluation or repairs may have on existing hardware, software or external and peripheral devices that may be attached to the equipment (eg., networks). I agree that service fees are payable whether or not a problem is solved. I agree that National Computer Resource will not release the above equipment until all parts and/or labour charges have been paid in full. I agree that after 90-days all unclaimed equipment becomes property of NCR.");
        legalText.setWrapStyleWord(true);
        legalText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        legalText.setFocusable(false);
        legalPane.setViewportView(legalText);

        SigLabel.setText("Client SIgnature:");

        signText.setEditable(false);
        signText.setBackground(new java.awt.Color(255, 255, 255));
        signText.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        signText.setForeground(new java.awt.Color(0, 0, 0));
        signText.setText("________________________________________________________________________________________________________________");
        signText.setAutoscrolls(false);
        signText.setBorder(null);
        signText.setFocusable(false);
        signText.setHighlighter(null);

        commitButt.setText("Save");
        commitButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitButtActionPerformed(evt);
            }
        });

        searchButt.setText("Client Search");
        searchButt.setFocusPainted(false);
        searchButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtActionPerformed(evt);
            }
        });

        printButt.setText("Print");
        printButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtActionPerformed(evt);
            }
        });

        connectedText.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        connectedText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        clientIDText.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        searchWOButt.setText("WO Search");
        searchWOButt.setFocusable(false);
        searchWOButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchWOButtActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Work Order ID:");

        updateButt.setText("Update");
        updateButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtActionPerformed(evt);
            }
        });

        addButt.setText("Add");
        addButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtActionPerformed(evt);
            }
        });

        clearButt.setText("Clear");
        clearButt.setFocusable(false);
        clearButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtActionPerformed(evt);
            }
        });

        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Company:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(connectedText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clientIDText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearButt, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(63, 63, 63))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(SigLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(signText, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addComponent(legalPane, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(minChargeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MinChargeText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateButt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commitButt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(printButt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(workToDoField, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(techLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(techComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(pinText, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(passwordText)
                                    .addComponent(eMailText)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(phoneOneText)
                                        .addComponent(cellPhoneText)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(fNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                            .addComponent(lNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(equipmentField, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(checkLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(checkDesktop, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(checkTablet, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(checkCharger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(addButt, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(searchButt)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(searchWOButt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(workPerformedArea)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(partBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(contactText, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(workOrderText, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 28, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(titleText, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(clientIDText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(connectedText, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(clearButt))
                    .addComponent(contactText, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(workOrderText))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButt)
                            .addComponent(searchButt)
                            .addComponent(searchWOButt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkDesktop, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkTablet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkCharger, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(equipmentField))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(phoneOneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cellPhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(workToDoField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pinText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eMailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(techLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(techComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(partBox)
                    .addComponent(workPerformedArea, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minChargeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MinChargeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(commitButt)
                    .addComponent(printButt)
                    .addComponent(updateButt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(legalPane, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SigLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 960, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void commitButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitButtActionPerformed

        try ( Connection connection = DriverManager.getConnection(connectionUrl);  Statement addWorkOrder = connection.createStatement();) {

            String currentClient = clientIDText.getText();
            String workToDo = workToBeDone.getText();
            boolean desktop = checkDesktop.isSelected();
            boolean laptop = checkLaptop.isSelected();
            boolean tablet = checkTablet.isSelected();
            boolean charger = checkCharger.isSelected();
            String clientPass = passwordText.getText();
            String clientPin = pinText.getText();
            String techName = techComboBox.getSelectedItem().toString();
            String workDone = workDoneText.getText();

            int desktopBool = (desktop) ? 1 : 0;
            int laptopBool = (laptop) ? 1 : 0;
            int tabletBool = (tablet) ? 1 : 0;
            int chargerBool = (charger) ? 1 : 0;

            String addClientScript = "insert into client_service(client_id, work_to_do, pc_pass, pc_pin, tech_name, desktop, laptop, tablet, charger, work_done)"
                    + "select " + currentClient + " as client_id,"
                    + "'" + workToDo + "' as work_to_do,"
                    + "'" + clientPass + "' as pc_pass,"
                    + "'" + clientPin + "' as pc_pin,"
                    + "'" + techName + "' as tech_name,"
                    + desktopBool + " as desktop,"
                    + laptopBool + " as laptop,"
                    + tabletBool + " as tablet,"
                    + chargerBool + " as charger,"
                    + "'" + workDone + "' as work_done";

            System.out.println(addClientScript);

            addWorkOrder.executeUpdate(addClientScript);

        } catch (SQLException e) {
        }
    }//GEN-LAST:event_commitButtActionPerformed

    private void searchButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtActionPerformed
        //open search form
        searchForm gui = new searchForm();
        gui.setVisible(true);

    }//GEN-LAST:event_searchButtActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        //generate a new work order number when form is opened, gets max from db + 1  

        try ( Connection connection = DriverManager.getConnection(connectionUrl);  Statement statement = connection.createStatement();) {

            String topWorkOrder = """
                                  select max(work_Order_ID) + 1 as word_order_id
                                  from client_service
                                  """;

            ResultSet searchWO = statement.executeQuery(topWorkOrder);

            while (searchWO.next()) {

                String woText = searchWO.getString(1);
                SignInFront.woTextArea.setText("      " + woText);
                fNameText.requestFocus();
            }

        } catch (SQLException e) {
        }

        try ( Connection connection = DriverManager.getConnection(connectionUrl);  Statement statement = connection.createStatement();) {

            String selectUser = "select username from users where username = 'Connected'";

            ResultSet uNQuery = statement.executeQuery(selectUser);

            // Print results from select statement
            while (uNQuery.next()) {

                connectedText.setText("Connected");
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_formWindowActivated

    private void printButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtActionPerformed

        Toolkit tkp = jPanel1.getToolkit();
        PrintJob pjp = tkp.getPrintJob(this, null, null);
        Graphics g = pjp.getGraphics();
        jPanel1.print(g);
        g.dispose();
        pjp.end();
    }//GEN-LAST:event_printButtActionPerformed

    private void searchWOButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchWOButtActionPerformed
        try ( Connection connection = DriverManager.getConnection(connectionUrl);  Statement statement = connection.createStatement();) {
            String defaultWO = woTextArea.getText();
            String cleanWO = defaultWO.trim();

            String topWorkOrder = """
                                  select work_order_id, cs.client_id, work_to_do, cs.pc_pass, cs.pc_pin, tech_name, desktop, laptop, tablet, charger, cs.client_id,
                                  c.fname, c.lname, c.phone, c.phone2, c.email, work_done
                                  from client_service as cs
                                  inner join clients as c
                                  on cs.client_id = c.client_id
                                  where work_order_ID = """
                    + cleanWO;

            ResultSet searchQ = statement.executeQuery(topWorkOrder);

            while (searchQ.next()) {
                String woToDoText = searchQ.getString("work_to_do");
                String passText = searchQ.getString("pc_pass");
                String pinText = searchQ.getString("pc_pin");
                Boolean desktop = searchQ.getBoolean("desktop");
                Boolean laptop = searchQ.getBoolean("laptop");
                Boolean tablet = searchQ.getBoolean("tablet");
                Boolean charger = searchQ.getBoolean("charger");
                String firstName = searchQ.getString("fname");
                String lastName = searchQ.getString("lname");
                String phoneNumber = searchQ.getString("phone");
                String cellNumber = searchQ.getString("phone2");
                String emailText = searchQ.getString("email");
                String clientID = searchQ.getString("client_id");
                String workDone = searchQ.getString("work_done");

                //add tech
                SignInFront.clientIDText.setText(clientID);
                SignInFront.workToBeDone.setText(woToDoText);
                SignInFront.passwordText.setText(passText);
                SignInFront.pinText.setText(pinText);
                SignInFront.checkLaptop.setSelected(laptop);
                SignInFront.checkDesktop.setSelected(desktop);
                SignInFront.checkTablet.setSelected(tablet);
                SignInFront.checkCharger.setSelected(charger);
                SignInFront.fNameText.setText(firstName);
                SignInFront.lNameText.setText(lastName);
                SignInFront.phoneOneText.setText(phoneNumber);
                SignInFront.cellPhoneText.setText(cellNumber);
                SignInFront.eMailText.setText(emailText);
                SignInFront.clientIDText.setText("Client ID: " + clientID);
                SignInFront.workDoneText.setText(workDone);
            }

        } catch (SQLException e) {
        }
    }//GEN-LAST:event_searchWOButtActionPerformed

    private void updateButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtActionPerformed
        try ( Connection connection = DriverManager.getConnection(connectionUrl);  Statement addWorkOrder = connection.createStatement();) {

            String workToDo = workToBeDone.getText();
            String clientPass = passwordText.getText();
            String clientPin = pinText.getText();
            String workDone = workDoneText.getText();
            String workOrderID = woTextArea.getText();

            String addClientScript = "update client_service"
                    + " set work_to_do = '" + workToDo + "', "
                    + "pc_pass = '" + clientPass + "', "
                    + "pc_pin = '" + clientPin + "', "
                    + "work_done = '" + workDone + "'"
                    + "where work_order_ID = " + workOrderID;

            System.out.println(addClientScript);

            addWorkOrder.executeUpdate(addClientScript);

        } catch (SQLException e) {
        }
    }//GEN-LAST:event_updateButtActionPerformed

    private void addButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtActionPerformed
        try ( Connection connection = DriverManager.getConnection(connectionUrl);  Statement addWorkOrder = connection.createStatement();) {

            String firstName = fNameText.getText();
            String lastName = lNameText.getText();
            String phoneHome = phoneOneText.getText();
            String phoneCell = cellPhoneText.getText();

            String addClientScript = "insert into clients(fname, lname, phone, phone2, creation_date)"
                    + "select '" + firstName + "' as fname,"
                    + "'" + lastName + "' as lname,"
                    + "'" + phoneHome + "' as phone,"
                    + "'" + phoneCell + "' as phone2,"
                    + "getdate() as creation_date";

            System.out.println(addClientScript);

            addWorkOrder.executeUpdate(addClientScript);

        } catch (SQLException e) {
        }
    }//GEN-LAST:event_addButtActionPerformed

    private void clearButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtActionPerformed
        fNameText.setText("");
        lNameText.setText("");
        phoneOneText.setText("");
        cellPhoneText.setText("");
        checkDesktop.setSelected(false);
        checkLaptop.setSelected(false);
        checkTablet.setSelected(false);
        checkCharger.setSelected(false);
        workToBeDone.setText("");
        workDoneText.setText("");
        equipmentText.setText("");
        passwordText.setText("");
        pinText.setText("");
        eMailText.setText("");
        clientIDText.setText("");
    }//GEN-LAST:event_clearButtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignInFront().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MinChargeText;
    private javax.swing.JLabel SigLabel;
    private javax.swing.JButton addButt;
    public static javax.swing.JTextField cellPhoneText;
    public static javax.swing.JCheckBox checkCharger;
    public static javax.swing.JCheckBox checkDesktop;
    public static javax.swing.JCheckBox checkLaptop;
    public static javax.swing.JCheckBox checkTablet;
    private javax.swing.JButton clearButt;
    public static javax.swing.JLabel clientIDText;
    private javax.swing.JButton commitButt;
    private javax.swing.JTextArea conactInfo;
    private javax.swing.JLabel connectedText;
    private javax.swing.JScrollPane contactText;
    public static javax.swing.JTextField eMailText;
    private javax.swing.JScrollPane equipmentField;
    private javax.swing.JTextArea equipmentText;
    public static javax.swing.JTextField fNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField lNameText;
    private javax.swing.JScrollPane legalPane;
    private javax.swing.JTextArea legalText;
    private javax.swing.JLabel minChargeLabel;
    private javax.swing.JTextField partBox;
    public static javax.swing.JTextField passwordText;
    public static javax.swing.JTextField phoneOneText;
    public static javax.swing.JTextField pinText;
    private javax.swing.JButton printButt;
    private javax.swing.JButton searchButt;
    private javax.swing.JButton searchWOButt;
    private javax.swing.JTextField signText;
    private javax.swing.JComboBox<String> techComboBox;
    private javax.swing.JLabel techLabel;
    private javax.swing.JLabel titleText;
    private javax.swing.JButton updateButt;
    public static javax.swing.JTextArea woTextArea;
    public static javax.swing.JTextArea workDoneText;
    private javax.swing.JScrollPane workOrderText;
    private javax.swing.JScrollPane workPerformedArea;
    public static javax.swing.JTextArea workToBeDone;
    private javax.swing.JScrollPane workToDoField;
    // End of variables declaration//GEN-END:variables
}
